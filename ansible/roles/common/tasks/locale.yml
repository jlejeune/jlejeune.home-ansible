---
- name: Set timezone to {{ system_timezone }}
  timezone:
    name: "{{ system_timezone }}"
  when: system_timezone is defined

- name: Ensure locale {{ system_locale }} exists
  locale_gen:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ system_locale }}"
  become: yes
  notify: reconfigure locales

- name: Get current locale and language configuration
  command: locale
  register: locale_status
  changed_when: false

- name: Parse 'LANG' from current locale and language configuration
  set_fact:
    locale_lang: "{{ locale_status.stdout | regex_search('LANG=([^\n]+)', '\\1') | first }}"

- name: Parse 'LC_ALL' from current locale and language configuration
  set_fact:
    locale_lc_all: "{{ locale_status.stdout | regex_search('LC_ALL=([^\n]+)', '\\1') | default([locale_lang], true) | first }}"

- name: Parse 'LANGUAGE' from current locale and language configuration
  set_fact:
    locale_language: "{{ locale_status.stdout | regex_search('LANGUAGE=([^\n]+)', '\\1') | default([locale_lang], true) | first }}"

- name: Configure locale to '{{ system_locale }}' and language to '{{ system_language }}'
  command: update-locale LANGUAGE={{ system_language }} LANG={{ system_locale }} LC_ALL={{ system_locale }}
  changed_when: locale_lang != system_locale or locale_lc_all != system_locale or locale_language != system_language
