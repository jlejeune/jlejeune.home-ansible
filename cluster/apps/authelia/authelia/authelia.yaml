---
apiVersion: v1
kind: Service
metadata:
  name: authelia
  namespace: authelia
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/instance: authelia
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: authelia
  namespace: authelia
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: "Host(`auth.${SECRET_DOMAIN}`) && PathPrefix(`/`)"
      middlewares:
        - name: security-header
          namespace: networking
      services:
        - kind: Service
          name: authelia
          namespace: authelia
          port: 80
          scheme: http
  tls:
    secretName: "${SECRET_DOMAIN}-tls"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia
  namespace: authelia
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: authelia
  updateStrategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: authelia
    spec:
      restartPolicy: Always
      containers:
        - name: authelia
          image: ghcr.io/authelia/authelia:4.38.8
          imagePullPolicy: IfNotPresent
          command: ["authelia"]
          args:
            - --config=/configuration.yaml
          resources:
            limits: {}
            requests: {}
          env:
            - name: AUTHELIA_SERVER_DISABLE_HEALTHCHECK
              value: "true"
            - name: AUTHELIA_JWT_SECRET_FILE
              value: /secrets/JWT_TOKEN
            - name: AUTHELIA_SESSION_SECRET_FILE
              value: /secrets/SESSION_ENCRYPTION_KEY
            - name: AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE
              value: /secrets/STORAGE_ENCRYPTION_KEY
            - name: AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE
              value: /secrets/STORAGE_PASSWORD
            - name: AUTHELIA_IDENTITY_PROVIDERS_OIDC_ISSUER_PRIVATE_KEY_FILE
              value: /secrets/IDENTITY_PROVIDERS_OIDC_ISSUER_PRIVATE_KEY_FILE
            - name: AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET_FILE
              value: /secrets/IDENTITY_PROVIDERS_OIDC_HMAC_SECRET_FILE
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - name: http
              containerPort: 9091
              protocol: TCP
          volumeMounts:
            - mountPath: /configuration.yaml
              name: config
              readOnly: true
              subPath: configuration.yaml
            - mountPath: /secrets
              name: secrets
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: authelia
            items:
              - key: configuration.yaml
                path: configuration.yaml
        - name: secrets
          secret:
            secretName: authelia
            items:
              - key: JWT_TOKEN
                path: JWT_TOKEN
              - key: SESSION_ENCRYPTION_KEY
                path: SESSION_ENCRYPTION_KEY
              - key: STORAGE_ENCRYPTION_KEY
                path: STORAGE_ENCRYPTION_KEY
              - key: STORAGE_PASSWORD
                path: STORAGE_PASSWORD
              - key: IDENTITY_PROVIDERS_OIDC_ISSUER_PRIVATE_KEY_FILE
                path: IDENTITY_PROVIDERS_OIDC_ISSUER_PRIVATE_KEY_FILE
              - key: IDENTITY_PROVIDERS_OIDC_HMAC_SECRET_FILE
                path: IDENTITY_PROVIDERS_OIDC_HMAC_SECRET_FILE
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: authelia
  namespace: authelia
  labels:
    app.kubernetes.io/instance: authelia
data:
  configuration.yaml: |
    ---
    theme: light
    default_redirection_url: https://home.${SECRET_DOMAIN}
    default_2fa_method: ''
    server:
      host: 0.0.0.0
      port: 9091
      asset_path: ''
      headers:
        csp_template: ''
      buffers:
        read: 4096
        write: 4096
      timeouts:
        read: 6s
        write: 6s
        idle: 30s
      enable_pprof: false
      enable_expvars: false
    log:
      level: info
      format: text
      file_path: ''
      keep_stdout: true
    totp:
      disable: false
      issuer: jlejeune.authelia.com
      algorithm: sha1
      digits: 6
      period: 30
      skew: 1
      secret_size: 32
    webauthn:
      disable: true
      display_name: Authelia
      attestation_conveyance_preference: indirect
      user_verification: preferred
      timeout: 60s
    identity_providers:
      oidc:
        clients:
          - id: immich
            description: Immich
            secret: "${SECRET_IMMICH_OAUTH_CLIENT_SECRET}"
            authorization_policy: one_factor
            pre_configured_consent_duration: 1w
            scopes:
              - openid
              - profile
              - email
            redirect_uris:
              - https://photos.${SECRET_DOMAIN}/auth/login
              - https://photos.${SECRET_DOMAIN}/user-settings
              - app.immich:/
            userinfo_signing_algorithm: none
    authentication_backend:
      password_reset:
        disable: false
        custom_url: ''
      ldap:
        implementation: custom
        url: ldaps://${NAS_ADDRESS}
        username_attribute: uid
        mail_attribute: mail
        timeout: 5s
        start_tls: false
        tls:
          server_name: 'jlejeune.home'
          skip_verify: true
          minimum_version: TLS1.2
          maximum_version: TLS1.3
        base_dn: dc=jlejeune,dc=home
        additional_users_dn: cn=users
        additional_groups_dn: cn=groups
        permit_referrals: false
        permit_unauthenticated_bind: false
        permit_feature_detection_failure: false
        user: ${SECRET_LDAP_ADMIN_BIND_DN}
        password: ${SECRET_LDAP_ADMIN_QUERY_PASSWORD}
        users_filter: (&({username_attribute}={input})(objectClass=person))
        groups_filter: (&(member={dn})(objectclass=posixGroup))
        group_name_attribute: cn
        display_name_attribute: gecos
    password_policy:
      standard:
        enabled: false
        min_length: 16
        max_length: 0
        require_uppercase: true
        require_lowercase: true
        require_number: true
        require_special: true
      zxcvbn:
        enabled: false
        min_score: 0
    session:
      name: 'authelia_session'
      domain: ${SECRET_DOMAIN}
      same_site: 'lax'
      expiration: 1h
      inactivity: 5m
      remember_me_duration: 1M
      redis:
        host: authelia-redis
        port: 6379
        database_index: 0
        maximum_active_connections: 8
        minimum_idle_connections: 0
    regulation:
      ban_time: 5m
      find_time: 2m
      max_retries: 3
    storage:
      postgres:
        host: authelia-db
        port: 5432
        database: authelia
        schema: public
        username: authelia
        timeout: 5s
    notifier:
      disable_startup_check: true
      smtp:
        host: ${SECRET_SMTP_HOST}
        port: 587
        username: ${SECRET_SMTP_USERNAME}
        password: "${SECRET_SMTP_PASSWORD}"
        sender: "${SECRET_AUTHELIA_SENDER_EMAIL}"
        timeout: 5s
        subject: '[Jlejeune Homelab Authentication] {title}'
        disable_html_emails: false
        disable_require_tls: false
        disable_starttls: false
        tls:
          server_name: ${SECRET_SMTP_HOST}
          skip_verify: true
          minimum_version: TLS1.2
          maximum_version: TLS1.3
    access_control:
      default_policy: deny
      networks:
        - name: home
          networks: ["192.168.1.0/24"]
      rules:
        - domain: auth.${SECRET_DOMAIN}
          policy: bypass

        - domain: home.${SECRET_DOMAIN}
          policy: one_factor

        - domain: longhorn.${SECRET_DOMAIN}
          policy: bypass
          networks:
            - home

        - domain: traefik.${SECRET_DOMAIN}
          policy: bypass
          networks:
            - home

        - domain: grafana.${SECRET_DOMAIN}
          policy: bypass
          networks:
            - home

        - domain: pihole.${SECRET_DOMAIN}
          policy: bypass
          networks:
            - home

        - domain: nas.${SECRET_DOMAIN}
          policy: bypass

        - domain: ha.${SECRET_DOMAIN}
          policy: bypass

        - domain: ha-code.${SECRET_DOMAIN}
          policy: bypass
          networks:
            - home

        - domain: owntracks.${SECRET_DOMAIN}
          policy: one_factor

        - domain: zigbee2mqtt.${SECRET_DOMAIN}
          policy: one_factor
          networks:
            - home
    ...
