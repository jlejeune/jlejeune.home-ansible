---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: immich-jlejeune-library-pv
spec:
  storageClassName: nfs
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /volume1/k3s/nfs_volumes/immich/jlejeune
    server: ${NAS_ADDRESS}
  claimRef:
    name: immich-jlejeune-library-pvc
    namespace: immich
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-jlejeune-library-pvc
  namespace: immich
  labels:
    app.kubernetes.io/instance: immich
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: immich-aconvert-library-pv
spec:
  storageClassName: nfs
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /volume1/k3s/nfs_volumes/immich/aconvert
    server: ${NAS_ADDRESS}
  claimRef:
    name: immich-aconvert-library-pvc
    namespace: immich
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-aconvert-library-pvc
  namespace: immich
  labels:
    app.kubernetes.io/instance: immich
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: immich-library-pv
spec:
  storageClassName: nfs
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /volume1/k3s/nfs_volumes/immich/immich-library
    server: ${NAS_ADDRESS}
  claimRef:
    name: immich-library-pvc
    namespace: immich
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-library-pvc
  namespace: immich
  labels:
    app.kubernetes.io/instance: immich
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  storageClassName: nfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: immich
  labels:
    app.kubernetes.io/instance: immich
  annotations:
    reloader.stakater.com/search: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: immich
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: immich
    spec:
      restartPolicy: Always
      initContainers:
        - name: postgresql-isready
          image: postgres:15.8
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_USERNAME
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_DATABASE_NAME
          command:
            - /bin/sh
            - -c
            - until pg_isready -U "${POSTGRES_USER}" -d
              "dbname=${POSTGRE_DB}" -h immich-db -p 5432 ; do
              sleep 2 ; done
      containers:
        - name: immich
          image: altran1502/immich-server:v1.122.3
          imagePullPolicy: IfNotPresent
          env:
            - name: PUID
              value: "1024"
            - name: PGID
              value: "100"
            - name: NODE_ENV
              value: "production"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich
                  key: DB_PASSWORD
          envFrom:
            - configMapRef:
                name: immich
                optional: false
          ports:
            - containerPort: 2283
          volumeMounts:
            - name: geocoding-dump
              mountPath: /usr/src/app/.reverse-geocoding-dump
            - name: library
              mountPath: /usr/src/app/upload
            - name: jlejeune-library
              mountPath: /usr/src/app/upload/library/jlejeune
            - name: aconvert-library
              mountPath: /usr/src/app/upload/library/aconvert
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
      volumes:
        - name: geocoding-dump
          emptyDir: {}
        - name: library
          persistentVolumeClaim:
            claimName: immich-library-pvc
        - name: jlejeune-library
          persistentVolumeClaim:
            claimName: immich-jlejeune-library-pvc
        - name: aconvert-library
          persistentVolumeClaim:
            claimName: immich-aconvert-library-pvc
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 80
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
---
apiVersion: v1
kind: Service
metadata:
  name: immich-server
  namespace: immich
spec:
  ports:
    - port: 80
      targetPort: 2283
      protocol: TCP
  selector:
    app.kubernetes.io/instance: immich
