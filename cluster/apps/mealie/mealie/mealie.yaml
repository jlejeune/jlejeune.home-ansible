---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mealie
  namespace: mealie
  labels:
    app.kubernetes.io/instance: mealie
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: mealie
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: mealie
    spec:
      restartPolicy: Always
      containers:
        - name: mealie
          image: hkotel/mealie:v3.3.1
          imagePullPolicy: IfNotPresent
          env:
            - name: DEBUG
              value: "true"
            - name: TZ
              value: "${TZ}"
            - name: RECIPE_DISABLE_COMMENTS
              value: "true"
            - name: RECIPE_PUBLIC
              value: "false"
            - name: RECIPE_SHOW_NUTRITION
              value: "false"
            - name: AUTO_BACKUP_ENABLED
              value: "true"
            - name: BASE_URL
              value: "https://mealie.${SECRET_DOMAIN}"
            - name: API_DOCS
              value: "false"
            - name: ALLOW_SIGNUP
              value: "false"
            - name: DEFAULT_GROUP
              value: "Users"
            - name: SMTP_HOST
              value: "${LB_SMTP_RELAY_ADDRESS}"
            - name: SMTP_PORT
              value: "25"
            - name: SMTP_AUTH_STRATEGY
              value: "NONE"
            - name: SMTP_FROM_NAME
              value: "Jlejeune Mealie Server"
            - name: SMTP_FROM_EMAIL
              value: "${SECRET_MEALIE_FROM_EMAIL}"
            - name: LDAP_AUTH_ENABLED
              value: "true"
            - name: LDAP_SERVER_URL
              value: ldap://${NAS_ADDRESS}
            - name: LDAP_TLS_INSECURE
              value: "true"
            - name: LDAP_BASE_DN
              value: "cn=users,dc=jlejeune,dc=home"
            - name: LDAP_USER_FILTER
              value: "(|(memberof=cn=external users,cn=groups,dc=jlejeune,dc=home)(memberof=cn=internal users,cn=groups,dc=jlejeune,dc=home))"
            - name: LDAP_ADMIN_FILTER
              value: "(memberof=cn=administrators,cn=groups,dc=jlejeune,dc=home)"
            - name: LDAP_QUERY_BIND
              value: "${SECRET_LDAP_ADMIN_BIND_DN}"
            - name: LDAP_QUERY_PASSWORD
              value: "${SECRET_LDAP_ADMIN_QUERY_PASSWORD}"
            - name: LDAP_ID_ATTRIBUTE
              value: "uid"
            - name: LDAP_NAME_ATTRIBUTE
              value: "gecos"
            - name: LDAP_MAIL_ATTRIBUTE
              value: "mail"
          envFrom:
            - secretRef:
                name: mealie
          ports:
            - containerPort: 9000
              name: http
          volumeMounts:
            - name: mealie-data
              mountPath: /app/data
      volumes:
        - name: mealie-data
          persistentVolumeClaim:
            claimName: mealie-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mealie
  name: mealie
  namespace: mealie
spec:
  selector:
    app.kubernetes.io/instance: mealie
  ports:
    - name: http
      port: 9000
      targetPort: http
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: mealie
  name: mealie-data-pvc
  namespace: mealie
spec:
  storageClassName: longhorn
  volumeName: mealie-data-pv
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mealie-data-pv
  namespace: mealie
spec:
  storageClassName: longhorn
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: '2'
      staleReplicaTimeout: '2880'
    volumeHandle: mealie-data-pv  # we have to create it manually on longhorn UI first
