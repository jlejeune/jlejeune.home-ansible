---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole
  namespace: networking
data:
  TZ: "${TZ}"
  ADMIN_EMAIL: "${SECRET_EMAIL}"
  VIRTUAL_HOST: "pihole.${SECRET_DOMAIN}"
  PIHOLE_DNS_: "${NAS_ADDRESS}"
  QUERY_LOGGING: "false"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-pvc
  namespace: networking
spec:
  storageClassName: longhorn
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: networking
  labels:
    app.kubernetes.io/instance: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: pihole
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: pihole
    spec:
      restartPolicy: Always
      containers:
        - name: pihole
          image: pihole/pihole:2023.02.1
          envFrom:
            - configMapRef:
                name: pihole
            - secretRef:
                name: pihole
          ports:
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/pihole
              name: pihole-etc
      volumes:
        - name: pihole-etc
          persistentVolumeClaim:
            claimName: pihole-pvc
---
kind: Service
apiVersion: v1
metadata:
  name: pihole-dns-tcp
  namespace: networking
  annotations:
    metallb.universe.tf/allow-shared-ip: pihole
spec:
  selector:
    app.kubernetes.io/instance: pihole
  type: LoadBalancer
  loadBalancerIP: "${LB_PIHOLE_ADDRESS}"
  externalTrafficPolicy: Local
  ports:
    - name: dns-tcp
      port: 53
      targetPort: 53
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns-udp
  namespace: networking
  annotations:
    metallb.universe.tf/allow-shared-ip: pihole
spec:
  selector:
    app.kubernetes.io/instance: pihole
  type: LoadBalancer
  loadBalancerIP: "${LB_PIHOLE_ADDRESS}"
  externalTrafficPolicy: Local
  ports:
    - name: dns-udp
      port: 53
      targetPort: 53
      protocol: UDP
---
kind: Service
apiVersion: v1
metadata:
  name: pihole-dashboard
  namespace: networking
spec:
  selector:
    app.kubernetes.io/instance: pihole
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: pihole
  namespace: networking
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: "Host(`pihole.${SECRET_DOMAIN}`) && PathPrefix(`/`)"
      middlewares:
        - name: security-header
          namespace: networking
      services:
        - kind: Service
          name: pihole-dashboard
          namespace: networking
          port: 80
          scheme: http
  tls:
    secretName: "${SECRET_DOMAIN}-tls"
