---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nextcloud
  namespace: nextcloud
data:
  MYSQL_DATABASE: nextcloud
  MYSQL_USER: nextcloud
  MYSQL_HOST: nextcloud-db
  REDIS_HOST: nextcloud-redis
  SMTP_PORT: "587"
  SMTP_SECURE: tls
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/instance: nextcloud
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nextcloud-pv
  namespace: nextcloud
spec:
  storageClassName: longhorn
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 50Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: '2'
      staleReplicaTimeout: '2880'
    volumeHandle: nextcloud-pv  # we have to create it manually on longhorn UI first
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-pvc
  namespace: nextcloud
spec:
  storageClassName: longhorn
  volumeName: nextcloud-pv
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: nextcloud
  labels:
    app.kubernetes.io/instance: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nextcloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: nextcloud
    spec:
      restartPolicy: Always
      containers:
        - name: nextcloud
          image: nextcloud:25.0.9
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "${TZ}"
            - name: NEXTCLOUD_TRUSTED_DOMAINS
              value: "nextcloud.${SECRET_DOMAIN}"
          envFrom:
            - secretRef:
                name: nextcloud
                optional: false
            - configMapRef:
                name: nextcloud
                optional: false
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - mountPath: /var/www/html
              name: nextcloud-vol
      volumes:
        - name: nextcloud-vol
          persistentVolumeClaim:
            claimName: nextcloud-pvc
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: "Host(`nextcloud.${SECRET_DOMAIN}`) && PathPrefix(`/`)"
      middlewares:
        - name: nextcloud-redirectregex
          namespace: networking
        - name: security-header
          namespace: networking
      services:
        - kind: Service
          name: nextcloud
          namespace: nextcloud
          port: 80
          scheme: http
  tls:
    secretName: "${SECRET_DOMAIN}-tls"
