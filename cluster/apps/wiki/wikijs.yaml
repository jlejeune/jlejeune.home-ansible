---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wikijs
  namespace: wiki
data:
  DB_TYPE: postgres
  DB_NAME: wikijs
  DB_USER: wikijs
  DB_HOST: wikijs-db
  DB_PORT: "5432"
---
apiVersion: v1
kind: Service
metadata:
  name: wikijs
  namespace: wiki
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/instance: wikijs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wikijs-pv
  namespace: wiki
spec:
  storageClassName: longhorn
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: '2'
      staleReplicaTimeout: '2880'
    volumeHandle: wikijs-pv  # we have to create it manually on longhorn UI first
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wikijs-pvc
  namespace: wiki
spec:
  storageClassName: longhorn
  volumeName: wikijs-pv
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wikijs
  namespace: wiki
  labels:
    app.kubernetes.io/instance: wikijs
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: wikijs
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: wikijs
    spec:
      restartPolicy: Always
      initContainers:
        - name: change-ownership-wikijs-datadir
          image: busybox
          command: ["/bin/chown", "-R", "1000:1000", "/wiki/data"]
          volumeMounts:
            - name: wikijs-data
              mountPath: /wiki/data
      containers:
        - name: wikijs
          image: requarks/wiki:2
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "${TZ}"
          envFrom:
            - secretRef:
                name: wikijs
                optional: false
            - configMapRef:
                name: wikijs
                optional: false
          volumeMounts:
            - name: wikijs-data
              mountPath: /wiki/data
      volumes:
        - name: wikijs-data
          persistentVolumeClaim:
            claimName: wikijs-pvc
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: wikijs-http
  namespace: wiki
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: "Host(`wiki.${SECRET_DOMAIN}`) && PathPrefix(`/`)"
      middlewares:
        - name: redirect-https
          namespace: networking
      services:
        - kind: Service
          name: wikijs
          namespace: wiki
          port: 3000
          scheme: http
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: wikijs-https
  namespace: wiki
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: "Host(`wiki.${SECRET_DOMAIN}`) && PathPrefix(`/`)"
      middlewares:
        - name: security-header
          namespace: networking
      services:
        - kind: Service
          name: wikijs
          namespace: wiki
          port: 3000
          scheme: http
  tls:
    secretName: "${SECRET_DOMAIN}-tls"
---
